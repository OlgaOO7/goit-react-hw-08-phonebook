{"version":3,"file":"static/js/987.88a4e825.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"labelForm\":\"ContactForm_labelForm__DEnf8\",\"inputForm\":\"ContactForm_inputForm__4bzZs\",\"addBtn\":\"ContactForm_addBtn__CACuJ\"};","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contactsSlice';\nimport { addContact } from '../../redux/contacts/operations';\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  const handleContactNameChange = evt => {\n    setName(evt.target.value);\n  };\n\n  const handleContactNumberChange = evt => {\n    setNumber(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const contactIsAdded = contacts.some(contact => contact.name === name);\n\n    if (contactIsAdded) {\n      return toast.error(`${name} is already in contacts!`, {\n        theme: 'colored',\n      });\n    }\n\n    // const form = evt.terget;\n    //   dispatch(addContact({\n    //       name: form.elements.name.value,\n    //       number: form.elements.number.value,\n    //     }));\n    //     // reset();\n    //     form.reset();\n    // };\n\n    dispatch(\n      addContact({\n        name,\n        phone,\n      })\n    );\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.formWrapper}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.labelForm}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleContactNameChange}\n            className={css.inputForm}\n          />\n        </label>\n\n        <label className={css.labelForm}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={phone}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleContactNumberChange}\n            className={css.inputForm}\n          />\n        </label>\n        <ToastContainer position=\"top-right\" autoClose={3000} limit={1} />\n        <button type=\"submit\" className={css.addBtn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"Contact_contactItem__4Z4gr\",\"personContact\":\"Contact_personContact__aYCkl\",\"deleteBtn\":\"Contact_deleteBtn__L35yB\"};","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport css from './Contact.module.css';\n\nexport function Contact({ name, number, id }) {\nconst dispatch = useDispatch();\n\nconst handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <li className={css.contactItem} key={id}>\n      <p className={css.personContact}>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n        id={id}\n        // onClick={() => dispatch(deleteContact(id))}\n        onClick={handleDelete}\n        className={css.deleteBtn}\n      >\n        Delete\n      </button>\n    </li>\n    )\n  };\n\n\nContact.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactsList_contactList__qIIH9\"};","import { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { getContacts, getIsLoading } from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/filter/filterSlice';\nimport css from './ContactsList.module.css';\n\n\n\nexport function ContactsList() {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  // console.log(contacts);\n\n  const filteredContacts = (contacts, filter) => {\n    console.log(isLoading);\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n    );\n  };\n\n  const visibleContacts = filteredContacts(contacts, filter);\n\n  return (\n    <ul className={css.contactList}>\n      {visibleContacts.map(({ id, name, phone }) => (\n        <Contact key={id} name={name} number={phone} id={id} />\n      ))}\n    </ul>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/contactsSlice';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","useState","name","setName","phone","setNumber","dispatch","useDispatch","contacts","useSelector","getContacts","reset","className","css","onSubmit","evt","preventDefault","some","contact","toast","theme","addContact","type","value","pattern","title","required","onChange","target","position","autoClose","limit","Contact","number","id","onClick","deleteContact","ContactsList","filter","getFilter","isLoading","getIsLoading","visibleContacts","console","log","toLowerCase","trim","includes","filteredContacts","map","useEffect","fetchContacts","Helmet"],"sourceRoot":""}